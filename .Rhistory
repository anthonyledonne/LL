fblikes <- getLikes("LaurenLayneAuthor", token = token)
getfriends
getFriends
query <- paste0("https://graph.facebook.com/", "LaurenLayneAuthor", "?fields=likes.limit(",
500, ").fields(id,name,website)")
content <- callAPI(query, token)
library(devtools)
install_github("Rfacebook", "pablobarbera", subdir="Rfacebook")
fbOAuth(app_id, app_secret, extended_permissions = TRUE)
fb_oauth <- fbOAuth(app_id="935912299784361", app_secret="9c9fe4df2d7077ea92bfcc8f270c0fa0")
install.packages("http://cran.r-project.org/src/contrib/Archive/httr/httr_0.6.1.tar.gz",
repo=NULL, type="source")
library(httr)
library(Rfacebook)
fb_oauth <- fbOAuth(app_id="935912299784361", app_secret="9c9fe4df2d7077ea92bfcc8f270c0fa0")
fblikes <- getLikes("LaurenLayneAuthor", token)
fblikes <- getLikes("LaurenLayneAuthor", token=fb_oauth)
getPage()
?getPage
page <- getPage("LaurenLayneAuthor", fb_oauth, n = 2, feed = FALSE)
token <- "CAACEdEose0cBACqFLS3LLsZCMrh8vU3T7005fAOMnwvt5awKIe17Ihv32fqF5KRWHsgWzaZAVXmEZAZCmoHAn2VIcLhpvVj5NpmfwZBfZCeZB68eWxEjPmbOi4SYbJZAEoK03e0g2HPOO5PqPhMm0P2cbZAd6cj8JuWei7PLOwffRxP3IQ8AOZCGA1v1smtZA2xEMIChP8PD8QpkCkPPsYJK4ZCHsllDnZBOLsSMZD"
page <- getPage("LaurenLayneAuthor", fb_oauth, n = 2, feed = FALSE)
callapi
?callAPI
??callAPI
shiny::runApp('apps/LL')
?qplot
shiny::runApp('apps/LL')
?ggplot
shiny::runApp('apps/LL')
shiny::runApp('apps/LL')
shiny::runApp('apps/LL')
download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv )
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "temp.csv")
?download.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "temp.csv", method = "curl")
temp <- read.csv("~/Dropbox/Data Science Stuff/temp.csv")
View(temp)
temp$VAL
temp[VAL == 24]
temp["VAL" == 24,]
class(temp$VAL)
temp[temp$VAL == 24]
temp[temp$VAL == 24,]
nrow(temp[temp$VAL == 24,])
nrow(temp[temp$VAL == 23,])
nrow(temp[temp$VAL == 2,])
nrow(temp[temp$VAL == "24",])
unique(temp$VAL)
length(temp[temp$VAL == 24, ])
length(temp[temp$VAL == 24, ], na.rm = TRUE)
value <- temp$VAL
value
value <- complete.cases(value)
value
value <- complete.cases(value)
value <- temp$VAL
value <- value[complete.cases(value)]
value
length(value == 24)
value <- subset(temp, VAL == 24)
value
length(value)
temp
subset(temp, temp$VAL == 24, select)
subset(temp, temp$VAL == 24, select = "VAL")
value <- subset(temp, temp$VAL == 24, select = "VAL")
nrow(value)
head(temp$FES)
getdata.data.DATA.gov_NGAP <- read.csv("~/Desktop/getdata-data-DATA.gov_NGAP.csv")
View(getdata.data.DATA.gov_NGAP)
dataset <- getdata.data.DATA.gov_NGAP
dataset <- dataset[7:15]
dataset
dat <- dataset
sum(dat$Zip*dat$Ext,na.rm=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", temp.xml, method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", "temp.xml", method = "curl")
library(XML)
library(XML)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc (xmlTreeParse(fileURL, useInternalNodes = TRUE))
doc <- (xmlTreeParse(fileURL, useInternalNodes = TRUE))
?xmlTreeParse
doc <- (xmlTreeParse(fileURL))
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- (xmlTreeParse(fileURL))
fileURL <- "getwd()"
doc <- (xmlTreeParse(fileURL))
doc <- xmlTreeParse("data.xml")
doc
doc <- xmlTreeParse("data.xml", useInternalNodes = TRUE)
head(doc)
doc[[1]]
[1]
1
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[1]
rootNode[1][1]
rootNode[1][1][1]
rootNode[1][1][1][1]
rootNode[[[1]]]
rootNode[[1]]
rootNode
doc <- xmlTreeParse("data.xml")
rootNode <- xmlRoot(doc)
xmlName(rootNode)
xmlName(rootNode[1])
rootNode[[1]]
doc <- xmlTreeParse("data.xml", useInternalNodes = TRUE)
rootNode <- xmlRoot(doc)
rootNode[1]
names(rootNode)
rootNode[[2]]
rootNode[[1]][1]
rootNode[[1]][1][1]
rootNode[[1]][2]
rootNode$row
rootNode$row
rootNode[[1]]
rootNode[[2]]
rootNode[[3]]
rootNode[1
]
rootNode[1]
rootNode[2]
rootNode[3]
rootNode[4]
rootNode[[1]]
rootNode[[1]]$row
rootNode[[1]][1]$row$zipcode
rootNode[[1]][[1]]
rootNode[[1]][[1]][[1]]
rootNode[[1]][[1]]$zipcode
xmlSApply(rootNode, xmlValue)
xmlSApply(rootNode[[1]], xmlValue)
stuff <- xmlSApply(rootNode[[1]], xmlValue)
?gsub
gsub("21231", "21231", stuff)
length(gsub("21231", "21231", stuff))
nrow(gsub("21231", "21231", stuff))
?find
nrow(find("21231"))
nrow(find("21231", stuff))
find("21231", stuff)
apropos("21231", where = stuff)
fread
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "temp.csv", method = "curl")
temp <- read.csv("temp.csv")
View(temp)
DT <- temp
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(rowMeans(DT)[DT$SEX==1])
system.time(rowMeans(DT)[DT$SEX==2])
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
mean(DT$pwgtp15,by=DT$SEX)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(DT[,mean(pwgtp15),by=SEX])
sapply(split(DT$pwgtp15,DT$SEX),mean)
mean(DT$pwgtp15,by=DT$SEX)
mean(DT$pwgtp15)
mean(DT$pwgtp15, by=DT$SEX
)
tapply(DT$pwgtp15,DT$SEX,mean)
# From CRAN:
install.packages("Rlinkedin")
library(Rlinkedin)
in.auth <- inOAuth("Galt Recruiting", "77o2cxlv0j8o4h", "0Z4P78IcDm0Z9FQm")
my.connections <- getMyConnections(in.auth)
my.profile <- getProfile(in.auth)
connections.profiles <- getProfile(in.auth, connections = TRUE)
individual.profile <- getProfile(in.auth, id = my.connections$id[1])
my.profile.dataframe <- data.frame(t(sapply(my.profile, function(x) {
x[c("fname", "lname", "location")]
})))
my.profile.dataframe
sapply(my.profile, function(x) names(x))
#### Search by Company Name ####
company.name <- getCompany(token=in.auth, universal_name="the coca cola company")
head(copmany.name)
cignium_technology <- read.csv("~/Dropbox/Data Science Stuff/cignium_technology.csv")
View(cignium_technology)
cignium_technology <- cignium_technology[-1]
subset(cignium_technology, "Supervisor" = "john.m.cusano")
head(subset(cignium_technology, "Supervisor" = "john.m.cusano"))
head(subset(cignium_technology, "Supervisor" = "john.m.cusano", select = "Last.Name"))
?subset
subset(cignium_technology, cignium_technology$Supervisor == "john.m.cuasno")
subset(cignium_technology, cignium_technology$Supervisor == "john.m.cusano")
unique(cignium_technology$Supervisor)
"cusano" %in% unique(cignium_technology$Supervisor)
everyone <- read.csv("~/Dropbox/Work/Sourcing/everyone.csv")
View(everyone)
everyone <- everyone[-c(1,4)]
length(everyone)
usa <- subset(everyone, Country == "USA")
usa
View(usa)
cusano_reports <- subset(usa, Supervisor == "johm.m.cusano")
head(cusano_reports)
cusano_reports
View(cusano_reports)
?find
find("cusano")
find("cusano", usa)
usa["cusano" %in% Supervisor, ]
view(usa)
View(usa)
usa["cuasno" %in% usa$Supervisor, ]
usa["cusano" %in% usa$Supervisor, ]
usa["john.m.cusano" %in% usa$Supervisor, ]
head(usa["john.m.cusano" %in% usa$Supervisor, ])
head(usa[usa$Supervisor == "kress.riley", ])
head(usa[usa$Supervisor == "john.m.cusano", ])
usa[usa$Supervisor == "john.m.cusano", ])
usa[usa$Supervisor == "john.m.cusano", ]
cusano_reports <- usa[usa$Supervisor == "john.m.cusano", ]
reports_of_cusano_reports <- subset(usa, cusano_reports %in% Supervisor)
reports_of_cusano_reports <- subset(usa, cusano_reports %in% usa$Supervisor)
?subset
subset(usa, usa$Supervisor == cusano_reports)
subset(usa, usa$Supervisor %in% cusano_reports)
usa[Supervisor %in% cusano_reports, ]
usa[usa$Supervisor %in% cusano_reports, ]
cusano_reports
length(cusano_reports)
cusano_reports <- cusano_reports[16]
cusano_reports
cusano_reports <- usa[usa$Supervisor == "john.m.cusano", ]
cusano_reports
cusano_reports[12]
cusano_reports[[12]]
cusano_reports <- cusano_reports[[12]]
cusano_reports
as.character(cusano_reports)
cusano_reports %in% usa$Supervisor
usa$Supervisor %in% cusano_reports
usa[usa$Supervisor %in% cusano_reports, ]
class(usa$Supervisor)
usa[usa$Supervisor == cusano_reports, ]
usa[usa$Supervisor %in% cusano_reports, ]
cusano_reports
cusano_reports_temp <- droplevels(cusano_reports)
cusano_reports_temp
cusano_reports <- cusano_reports_temp
usa[usa$Supervisor %in% cusano_reports, ]
supervisors <- usa$Supervisor
supervisors <- droplevels(supervisors)
cusano_reports %in% supervisors
supervisors %in% cusano_reports
nrow(supervisors %in% cusano_reports)
intersect(cusano_reports, superClassDepth())
intersect(cusano_reports, supervisors)
cusano_reports
gsub("@accenture.com","", cusano_reports)
as.factor(gsub("@accenture.com","", cusano_reports))
cusano_reports <- as.factor(gsub("@accenture.com","", cusano_reports))
usa[usa$Supervisor %in% cusano_reports, ]
nrow(usa[usa$Supervisor %in% cusano_reports, ])
reports_of_cusano_reports <- usa[usa$Supervisor %in% cusano_reports, ]
rreports_of_cusano_reports
reports_of_cusano_reports
reports_of_cusano_reports[reports_of_cusano_reports$Metro.City == "New York", ]
reports_of_cusano_reports[[14]]
reports_of_cusano_reports[[12]]
reports_of_reports <- reports_of_cusano_reports[[12]]
reports_of_reports <- droplevels(reports_of_reports)
reports_of_reports
reports_of_reports <- gsub("@accenture.com", "", reports_of_reports)
reports_of_reports <- as.factor(reports_of_reports)
reports_of_reports
4th_level <- usa[usa$Supervisor %in% reports_of_reports, ]
fourth_level <- usa[usa$Supervisor %in% reports_of_reports, ]
fourth_level
fourth_level[[12]]
fourth_level <- droplevels(fourth_level[[12]])
fourth_level <- gsub("@accenture.com", "", fourth_level)
fifth_level <- usa[usa$Supervisor %in% fourth_level, ]
fifth_level
directs <- usa[usa$Supervisor %in% cusano_reports, ]
directs_of_directs <- usa[usa$superb]
directs_of_directs <- usa[usa$Supervisor %in% reports_of_reports, ]
directs_of_directs_of_directs <- usa[usa$Supervisor %in% fourth_level, ]
directs_of_directs_of_directs_of_directs <- usa[usa$Supervisor %in% fifth_level, ]
insurance_people <- as.data.frame(cbind(directs, directs_of_directs, directs_of_directs_of_directs, directs_of_directs_of_directs_of_directs))
insurance_people <- as.data.frame(rbind(directs, directs_of_directs, directs_of_directs_of_directs, directs_of_directs_of_directs_of_directs))
insurance_people
unique(insurance_people)
insurance_people
fifth_level
fifth_level <- fifth_level[[12]]
fifth_level <- droplevels(fifth_level)
fifth_level <- gsub("@accenture.com", "", fifth_level)
directs_of_directs_of_directs
directs_of_directs_of_directs_of_directs
directs_of_directs_of_directs_of_directs <- usa[usa$Supervisor %in% fifth_level, ]
insurance_people <- as.data.frame(rbind(insurance_people, directs_of_directs_of_directs_of_directs))
insurance_people[insurance_people$Metro.City == "New York", ]
View(insurance_people)
insurance
insurance_people.nyc <- subset(insurance_people, Metro.City == "New York")
View(insurance_people.nyc)
rownames(insurance_people.nyc) <- NULL
insurance_people.nyc <- insurance_people.nyc[order(Level)]
insurance_people.nyc <- insurance_people.nyc[order(insurance_people.nyc$Level), ]
View(usa)]
View(usa)
subset(usa, Last.Name == "Freling", )
insurance_people.nyc.technology <- subset(insurance_people.nyc, Deploy.1 == "Technology")
View(insurance_people.nyc.technology)
subset(insurance_people, Deploy.1 == "Technology")
View(subset(insurance_people, Deploy.1 == "Technology"))
library(shiny)
library(PerformanceAnalytics)
?lines
?png
?pch
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
?lm
lm(x, weights = w)
?ls
?lm
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
w <- NULL
plot(x, y)
?lines
lines(x, y)
lines(x)
par(new = TRUE)
plot(x,y)
data(mtcars)
lm(mpg ~ weight, data = mtcars)
lm(mpg ~ wgt, data = mtcars)
mtcars
lm(mpg ~ wt, data = mtcars)
library(manipulate)
install.packages("manipulate")
library(manipulate)
myHist <- function(mu) {}
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
weights(x) <- w
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
weighted.mean(x, w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(x~y))
coef(lm(y~x))
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
?norm
norm(x)
?rnorm
mean(x)
x-mean(x)
(x-mean(x))/var(x)
(x-mean(x))/var(x)^2
(x-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x0)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
x <- x-mean(x)
y <- y-mean(y)
x
y
lm(y~x)
freqData <- as.data.frame(table(x,y))
freqData
library(ggplot2)
p <- ggplot(filter(freqData, freqData > 0 ), aes(x=x, y = y))
p <- ggplot(filter(freqData, fre > 0 ), aes(x=x, y = y))
p <- ggplot(filter(freqData, freq > 0 ), aes(x=x, y = y))
p <- ggplot(filter(freqData, Freq > 0 ), aes(x=x, y = y))
line(x, y)
lm(I(x)~I(y) - 1)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~0+x)
?qunif
qunif(.75)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
weighted.mean(x, [])
weighted.mean(x, p)
library(swirl)
install_from_swirl("Exploratory Data Analysis")
library(swirl)
swirl()
library(swirl)
swirl
swirl()
install_from_swirl("Statistical Inference")
swirl()
(9)/36
.75
11/12
deck
1/52
52
1/13
0
3/13
2/52
2/13
2/51
.64
.64
mypdf
integrate(mypdf, 0, 1.6)
.16
1
sqrt(2)
.997*.001
.999*.915
.999*.015
.997*.001/.999*.015
(.997*.001)/(.999*.001+.015*.999)
(.997*.001) / (.997*.001 + .015*.999)
1/6
3.5
expect_dice()
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
.5*(edh+edl)
integrate(myfunc, 0, 2)
spop
mean(spo)
mean(spop)
allsam
apply(allsam,1,mean)
mean(smeans)
dice_sqr
dice_sqr*dice_fair
ex2_fair <- dice_sqr*dice_fair
ex2_fair <- dice_sqr * dice_fair
ex2_fair <- sum(dice_fair * dice_sqr)
ex2_fair - 3.5^2
dice_high
sum(dice_high * dice_sqr)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
5*.8
.8
.8^5
(5,x)*(.8)^x*(.2)^(5-x)
info()
choose(5,5)
x <- 3
choose(5,3)*(.8)^3*(.2)^(5-3) + choose(5,4)*(.8)^4*(.2)^(5-4) + choose(5,5)*(.8)^5*(.2)^(5-5)
pbinom(2,5,.8,lower.tail = FALSE)
qnorm(10)
qnorm(.1)
0
qnorm(.975,3,2)
1.96*2 + 3
pnorm(1200, mean = 1020, sd = 50, lower.tail = FALSE)
pnorm(1200, )
pnorm((1200-1020)/50,lower.tail=FALSE)
pnorm((1200-1020)/75,lower.tail=FALSE)
qnorm(.75,mean=1020,sd=50
)
.47
pnorm(qnorm(.53))
.53
ppois(3, (2.5*4))
ppois(3,2.5 * 4)
?pbinom
pbinom(5, 1000, .01, lower.tail = TRUE, log.p = FALSE)
ppois(5, lambda = n*p)
ppois(5, lambda = 1000*.01)
setwd("apps/LL")
getwd
getwd()
setwd("~")
getwd()
getwd()
list.files()
setwd("Dropbox/Data Science Stuff")
list.files()
setwd("apps")
setwd("LL")
list.files
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
